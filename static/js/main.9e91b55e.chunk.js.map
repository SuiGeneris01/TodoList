{"version":3,"sources":["components/Todos.jsx","messages.js","components/TabArea.jsx","components/Create.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Todos","_this$props","this","props","classes","category","messages","matchWithTag","filter","Todo","person","console","log","length","map","react_default","a","createElement","react","index_es","item","xs","md","className","card","variant","component","primary","pos","color","secondary","Component","withStyles","container","padding","display","align","maxWidth","height","borderRadius","flex","overflowY","title","fontSize","marginBottom","marginTop","media","tags","id","TabArea","onSelect","index","findIndex","tag","root","value","onChange","e","indicatorcolor","textColor","centered","label","flexGrow","theme","formControl","width","_Component","_temp","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","open","form","handleToggle","setState","handleChange","name","_ref","target","defineProperty","handleSubmit","onCreate","inherits","createClass","key","_this$state","_this$state$form","aria-label","onClick","size","Add_default","onClose","aria-labelledby","margin","htmlFor","multiline","rows","App","onTodoCreate","entries","reduce","message","push","getTodosByTag","elevation","style","position","Create","components_TabArea","wrap","spacing","alignItems","components_Todos","grow","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e91b55e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    container: {\r\n        padding: '10px',\r\n        // width: \"450px\",\r\n        display: \"flex\",\r\n    },\r\n    card: {\r\n        align: \"center\",\r\n        maxWidth: 275,\r\n        height: 200,\r\n        display: \"flex\",\r\n        borderRadius: \"6px\",\r\n        flex: 1,\r\n        overflowY: \"auto\"\r\n\r\n    },\r\n    title: {\r\n        fontSize: 14\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n        marginTop: 12\r\n    },\r\n    media: {\r\n        height: 140\r\n    }\r\n};\r\n\r\n\r\nclass Todos extends Component {\r\n\r\n    render() {\r\n        const { classes, category, messages } = this.props\r\n        const matchWithTag = messages.filter(function(Todo) {\r\n            // eslint-disable-next-line\r\n            return Todo.person == category;\r\n        });\r\n        console.log(matchWithTag)   \r\n\r\n        // eslint-disable-next-line\r\n        return matchWithTag.length == 0\r\n        ?messages.map((messages) => (\r\n            <Fragment>\r\n                <Grid item xs=\"auto\" md={3} >\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h4\">\r\n                                {messages.primary}\r\n                            </Typography>\r\n\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                Tags: {messages.person}\r\n                            </Typography>\r\n                            <Typography component=\"p\">\r\n                                {messages.secondary}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Fragment>\r\n        ))\r\n        : matchWithTag.map((matchWithTag) => (\r\n            <Fragment>\r\n                <Grid item xs=\"auto\" md={3} >\r\n                    <Card className={classes.card}> \r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h4\">\r\n                                {matchWithTag.primary}\r\n                            </Typography>\r\n\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                Tags: {matchWithTag.person}\r\n                            </Typography>\r\n                            <Typography component=\"p\">\r\n                                {matchWithTag.secondary}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Fragment>            \r\n        ));\r\n    }\r\n}\r\n\r\nTodos.propTypes = {\r\n    messages: PropTypes.array.isRequired\r\n}\r\nexport default withStyles(styles)(Todos); ","export const tags = [\r\n    'Favour', 'Deolu', 'Seun', 'Ferrum'\r\n]\r\n\r\nexport const messages = [{\r\n        id: 1,\r\n        primary: 'Brunch this week?',\r\n        secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\r\n        person: 'Favour',\r\n    },\r\n    {\r\n        id: 2,\r\n        primary: 'Birthday Gift',\r\n        secondary: \"Do you have a suggestion for a good present for John on his work anniversary. I am really confused & would love your thoughts on it. Do you have a suggestion for a good present for John on his work anniversary. I am really confused & would love your thoughts on it.\",\r\n        person: 'Seun',\r\n    },\r\n    {\r\n        id: 3,\r\n        primary: 'Recipe to try',\r\n        secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\r\n        person: 'Favour',\r\n    },\r\n    {\r\n        id: 4,\r\n        primary: 'Yes!',\r\n        secondary: 'I have the tickets to the ReactConf for this year.',\r\n        person: 'Seun',\r\n    },\r\n    {\r\n        id: 5,\r\n        primary: \"Doctor's Appointment\",\r\n        secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\r\n        person: 'Deolu',\r\n    },\r\n    {\r\n        id: 6,\r\n        primary: 'Discussion',\r\n        secondary: `Menus that are generated by the bottom app bar (such as a bottom\r\n                navigation drawer or overflow menu) open as bottom sheets at a higher elevation\r\n                than the bar.`,\r\n        person: 'Deolu',\r\n    },\r\n    {\r\n        id: 7,\r\n        primary: 'Summer BBQ',\r\n        secondary: `Who wants to have a cookout this weekend? I just got some furniture\r\n                for my backyard and would love to fire up the grill.`,\r\n        person: 'Ferrum',\r\n    },\r\n]","import React, { Component } from 'react';\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {tags} from \"../messages.js\"\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 10,\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass TabArea extends Component {\r\n  \r\n  render() {\r\n    //eslint-disable-next-line\r\n    const { category, classes, onSelect } = this.props;\r\n    const index = category \r\n    ? tags.findIndex(tag => tag === category) + 1\r\n    : 0\r\n\r\n    const onTagSelect = (e, index) => \r\n      onSelect(index === 0 ? '' : tags[index -1])\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value = {index}\r\n          onChange = {onTagSelect}\r\n          indicatorcolor =\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n        <Tab label = \"All\" />\r\n        {\r\n          tags.map((tag) => (\r\n          <Tab label={tag} />\r\n          ))\r\n        };\r\n        \r\n        \r\n        </Tabs>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TabArea);","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Fab,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem\r\n} from '@material-ui/core/';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: 500\r\n    }\r\n})\r\n\r\nexport default withStyles(styles)(class extends Component {\r\n    state = {\r\n        open: false,\r\n        form: {\r\n            primary: \"\",\r\n            secondary: \"\",\r\n            person: \"\"\r\n        }\r\n    }\r\n\r\n    handleToggle = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n\r\n    handleChange = name => ({ target: { value } }) => {\r\n        this.setState({\r\n            form: {\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {form}= this.state\r\n        this.props.onCreate(form)\r\n    }\r\n\r\n    render() {\r\n        const { open, form: { primary, secondary, person } } = this.state,\r\n            { tags: tag, classes } = this.props\r\n        return <Fragment>\r\n            <Fab\r\n                aria-label=\"Add\"\r\n                onClick={this.handleToggle}\r\n                size=\"medium\">\r\n                <AddIcon />\r\n            </Fab>\r\n            <Dialog\r\n                open={open}\r\n                onClose={this.handleToggle}\r\n                aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Create a new Todo\r\n            </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Fill out the form below\r\n                    </DialogContentText>\r\n                    <form>\r\n                        <TextField\r\n                            label=\"Title\"\r\n                            value={primary}\r\n                            onChange={this.handleChange('primary')}\r\n                            margin=\"normal\"\r\n                            className = {classes.formControl}\r\n                        />\r\n                        <br />\r\n                        <FormControl className = {classes.formControl}>\r\n                            <InputLabel htmlFor=\"peson\">Tag</InputLabel>\r\n                            <Select\r\n                                value={person}\r\n                                onChange={this.handleChange('person')}>\r\n                                {\r\n                                    tag.map((tags) => (\r\n                                        <MenuItem value={tags}>{tags}</MenuItem>\r\n                                    ))\r\n                                };\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br />\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            value={secondary}\r\n                            multiline\r\n                            rows=\"4\"\r\n                            onChange={this.handleChange('secondary')}\r\n                            margin=\"normal\"\r\n                            className = {classes.formControl}\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick= {this.handleSubmit} >\r\n                        Create\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    }\r\n})","import React, { Component } from 'react';\nimport './App.css';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Todos from \"./components/Todos\";\nimport TabArea from \"./components/TabArea\";\nimport \"typeface-roboto\";\nimport { AppBar, Toolbar, Typography, Grid, Paper } from '@material-ui/core';\nimport { tags,messages } from \"./messages.js\";\nimport Create from \"./components/Create\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  }\n}\n\nclass App extends Component {\n  state = {\n    messages\n  }\n\n  getTodosByTag() {\n    return Object.entries(this.state.messages.reduce((messages, message) => {\n      const { person } = message\n\n      if (!messages[person]) {\n        (messages[person] = [])\n      }\n      messages[person].push(message)\n      return messages\n    }, {}\n    ))\n  }\n\n  handleChange = category => {\n    this.setState({\n      category\n    })\n  }\n\n  onTodoCreate = tags => {\n\n  }\n\n  render() {\n    //eslint-disable-next-line\n    const sortByTags = this.getTodosByTag(),\n    {category} = this.state\n    return (\n      <div className=\"App\" >\n\n        <Paper\n          elevation = {8}\n          style={{ padding: 15, \n          marginTop: 10, \n          marginBottom: 10, \n          overflowY: \"auto\" }}>\n\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\" style = {{ flex: 1 }}>\n                My Todos\n                </Typography>\n                <Create \n                tags = {tags}                \n                onCreate = {this.onTodoCreate}/>\n            </Toolbar>\n          </AppBar>\n          \n          <TabArea \n            category = {category}\n            onSelect = {this.handleChange}\n          />\n\n          <Grid container wrap=\"wrap\" spacing={24} alignItems=\"center\">\n            <Todos \n            category = {category}\n            tags = {tags}\n            messages={this.state.messages} />\n          </Grid>\n        \n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}